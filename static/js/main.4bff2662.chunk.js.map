{"version":3,"sources":["components/stock-list.js","components/stock.js","components/totalWallet.js","App.js","serviceWorker.js","index.js"],"names":["props","className","this","children","React","Component","num","scale","includes","arr","split","sig","Math","round","tiker","title","symbol","priceUSD","profit","price","increase","change","ammount","percent","balance","hold","worth","worthUSD","socket","io","state","savedStocks","name","currency","icon","shares","invested","StockData","wallet","countdown","data","Promise","resolve","stocks","length","i","oldprice","market_price","SEK","current","newprice","emit","res","setTimeout","console","log","setState","animationHandler","then","updateWallet","loadStocks","setInterval","connected","item","total_balance","total_invested","map","index","key","USD","toPercent","onClick","window","location","reload","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4bff2662.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div className=\"stock-list\">\n          { this.props.children }\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n    \n  }\n\n  round(num, scale) {\n    if(!(\"\" + num).includes(\"e\")) {\n      return +(Math.round(num + \"e+\" + scale)  + \"e-\" + scale);\n    } else {\n      var arr = (\"\" + num).split(\"e\");\n      var sig = \"\"\n      if(+arr[1] + scale > 0) {\n        sig = \"+\";\n      }\n      return +(Math.round(+arr[0] + \"e\" + sig + (+arr[1] + scale)) + \"e-\" + scale);\n    }\n  }\n  render(){\n      var tiker = this.props.tiker ? this.round(this.props.tiker, 2) : '';\n\n    return (\n      <div className=\"stock\">\n          <div className=\"top-bar\">\n              <div className=\"title-content\">\n                <span className=\"title\">{ this.props.title }</span>\n                <span className=\"symbol\">{ this.props.symbol } <span className=\"usdprice\">${this.round(this.props.priceUSD,2)}</span></span>\n              </div>\n              \n              <div className={`marketPrice ${this.props.profit ? 'profit' : 'lost'}`}>\n                  <span className=\"price\"><span className={`tiker ${tiker ? tiker < 0 ? 'lost' : 'profit' : ''}`}> {tiker} </span>{this.round(this.props.price,2)} SEK <span className={`direction ${this.props.increase ? 'increase' : 'decrease'}`}><i className={`fas fa-angle-double-${this.props.increase ? 'up' : 'down'}`}></i></span></span>\n                  <span className=\"change\"><i className={`fas fa-chevron-${this.props.profit ? 'up' : 'down'}`}></i> {this.round(this.props.change.ammount,2)} </span>\n                  <span className=\"changePercent\">({this.round(this.props.change.percent * 100, 2)}%)</span>\n              </div>\n          </div>\n          <div className=\"bottom-bar\">\n              <div className=\"hold\">Antal: { this.props.balance.hold } {this.props.symbol}</div>\n              <div className=\"worth\">{ this.round(this.props.balance.worth, 2) } SEK</div>\n              <div className=\"worth-USD\">${ this.round(this.props.balance.worthUSD, 2) } </div>\n              <div className={`pr-lo-change ${this.props.balance.change.ammount < 0  ? 'lost' : 'profit'}`}>\n                <div className=\"pr-lo\"><i className={`fas fa-chevron-${this.props.balance.change.ammount < 0 ? 'down' : 'up'} small`}></i> { this.round(this.props.balance.change.ammount,2) } <span className=\"small sek\">SEK</span></div>\n                <div className=\"pr-lo-percent\">{this.round(this.props.balance.change.percent * 100, 2)}%</div>\n              </div>\n          </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  round(num, scale) {\n    if(!(\"\" + num).includes(\"e\")) {\n      return +(Math.round(num + \"e+\" + scale)  + \"e-\" + scale);\n    } else {\n      var arr = (\"\" + num).split(\"e\");\n      var sig = \"\"\n      if(+arr[1] + scale > 0) {\n        sig = \"+\";\n      }\n      return +(Math.round(+arr[0] + \"e\" + sig + (+arr[1] + scale)) + \"e-\" + scale);\n    }\n  }\n  render(){\n    return (\n      <div className=\"wallet-content\">\n          <div className=\"balance\">{this.round(this.props.balance,2)} <span className=\"small sek\">SEK</span></div>\n          <div className={`changeContent ${this.props.profit ? 'profit' : 'lost'}`}>\n             <div className=\"change\"><i className={`fas fa-chevron-${this.props.profit ? 'up' : 'down'} small`}></i> {this.round(this.props.change,2)} <span className=\"small sek\">SEK</span></div>\n             <div className=\"changePercent\">{this.round(this.props.percent,2)}%</div>\n          </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport StockList from './components/stock-list';\nimport StockItem from './components/stock';\nimport Wallet from './components/totalWallet';\n\nimport io from 'socket.io-client';\n\nconst socket = io('http://34.105.195.136:3005/');\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      savedStocks: [\n        {\n          symbol: 'NVAX',\n          name:'NOVAVAX INC',\n          currency: 'NVAX',\n          icon: null,\n          balance: {\n            shares: 0,\n            invested: 0\n          },\n        },\n        {\n          symbol: 'ETH-USD',\n          name:'ETHEREUM',\n          currency: 'ETH',\n          icon: null,\n          balance: {\n            shares: 1.00057718,\n            invested: 3400\n          },\n        },\n        {\n          symbol: 'LTC-USD',\n          name:'LITECOIN',\n          currency: 'LTC',\n          icon: null,\n          balance: {\n            shares: 5.0118422,\n            invested: 2500\n          },\n        },\n        {\n          symbol: 'LINK-USD',\n          name:'CHAINLINK',\n          currency: 'LINK',\n          icon: null,\n          balance: {\n            shares: 10.73068806,\n            invested: 1000\n          },\n        },\n        {\n          symbol: 'NIO',\n          name:'NIO INC',\n          currency: 'NIO',\n          icon: null,\n          balance: {\n            shares: 20,\n            invested: 2360\n          },\n        },\n        {\n          symbol: 'NKLA',\n          name:'NIKOLA CORP.',\n          currency: 'NKLA',\n          icon: null,\n          balance: {\n            shares: 13,\n            invested: 4080\n          },\n        }\n      ],\n      StockData: [],\n      wallet: {\n        balance: 0,\n        change: 0,\n        percent: 0,\n      },\n      countdown: 'Laddar..'\n    }\n  }\n  async animationHandler(data){\n    return new Promise((resolve) => {\n      var stocks = this.state.StockData;\n\n      if(stocks.length){\n        for(var i in stocks){\n          var oldprice = stocks[i].market_price.SEK.current;\n          var newprice = data[i].market_price.SEK.current;\n\n          if(newprice >= oldprice ){\n            data[i].increase = true;\n          }\n\n          data[i].tiker = newprice - oldprice;\n        }\n\n        resolve(data);\n      } else {\n        resolve(data);\n      }\n    });\n  }\n\n  loadStocks(){\n    socket.emit('request stocks', this.state.savedStocks, (res) => {\n      setTimeout(() => {\n        if(!res){\n          console.log('Failed to update');\n          this.setState({\n            countdown: 20,\n          });\n          return false;\n        }\n        this.animationHandler(res).then((data) => {\n          this.setState({\n            StockData: data,\n            countdown: 20,\n          });\n    \n          this.updateWallet();\n        })\n        \n      }, 3000);\n      \n    });\n  }\n\n  componentDidMount(){\n    this.loadStocks();\n    \n    setInterval(() => {\n      if(socket.connected)\n            this.loadStocks();\n    }, 20000);\n  }\n\n  toPercent(item){\n    var worth = item.balance.shares * item.market_price.SEK.current;\n    var change = worth - item.balance.invested;\n\n    var percent = change / worth;\n    return percent || 0;\n  }\n\n  updateWallet(){\n    var stocks = this.state.StockData;\n\n    var total_balance = 0;\n    var total_invested = 0;\n\n    for(var i in stocks){\n      var hold = stocks[i].balance.shares;\n      var market_price = stocks[i].market_price.SEK.current;\n\n      var balance = hold * market_price;\n\n      total_balance += balance;\n      total_invested += stocks[i].balance.invested;\n    }\n\n    var change = total_balance - total_invested;\n\n    var wallet = {\n      balance: total_balance,\n      change: change,\n      percent: change / (total_invested * 0.01),\n    }\n\n    this.setState({\n      wallet: wallet\n    })\n  }\n  render(){\n    return (\n      <div className=\"app\">\n        <Wallet balance={this.state.wallet.balance} change={this.state.wallet.change} percent={this.state.wallet.percent} profit={this.state.wallet.change < 0 ? false : true }></Wallet>\n\n        <div className={`indicator ${socket.connected ? 'connection_online' : 'connection_offline'}`}></div>\n\n        <div className=\"page\">         \n          <StockList>\n            { this.state.StockData.map((item, index) => (\n               <StockItem \n                key={index}\n                title={item.name}\n                symbol={item.currency}\n                increase={item.increase ? true : false}\n                tiker={item.tiker ? item.tiker : false}\n                profit={item.market_price.SEK.change < 0 ? false : true}\n                price={item.market_price.SEK.current}\n                priceUSD={item.market_price.USD.current}\n                change={{ ammount: item.market_price.SEK.change, percent: item.market_price.SEK.percent }}\n                balance={{ hold: item.balance.shares, worth: item.balance.shares * item.market_price.SEK.current, worthUSD: item.balance.shares * item.market_price.USD.current, change: {\n                  ammount: (item.balance.shares * item.market_price.SEK.current) - item.balance.invested, percent: this.toPercent(item)\n                }}}\n              ></StockItem>\n            )) }\n\n            <div className=\"counter\">{socket.connected ? this.state.countdown === 'Laddar..' ? (\n            \n            <i className=\"fas fa-spinner animateSpin\"></i>\n          ) : this.state.countdown : 'DC'}</div>\n          </StockList>\n          \n        </div>\n        <div className=\"reload-btn\" onClick={() => window.location.reload()}>Uppdatera</div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}